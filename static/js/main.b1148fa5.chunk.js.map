{"version":3,"sources":["PortalMaterial.js","text.js","main.js","index.js"],"names":["PortalMaterial","uniforms","uTime","value","uColorStart","THREE","uColorEnd","vertexShader","fragmentShader","this","v","extend","Text","children","vAlign","hAlign","size","props","color","font","useLoader","FontLoader","config","useMemo","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","mesh","useRef","useLayoutEffect","current","geometry","computeBoundingBox","boundingBox","getSize","position","x","y","scale","ref","args","hextorgb","hex","result","exec","r","parseInt","g","b","componentToHex","c","toString","length","Ocean","gl","useThree","state","waterNormals","wrapS","wrapT","geom","textureWidth","textureHeight","sunDirection","sunColor","waterColor","distortionScale","fog","undefined","format","encoding","useFrame","delta","material","time","Math","PI","TextGeometry","Water","Ball","gltf","GLTFLoader","styles","useSpring","loop","reverse","from","rotation","to","mass","tension","friction","object","scene","Umbrella","Island","flatShading","nodes","Landscape004","Dock","Noticeboard","width","intensity","castShadow","Zeppelin","mesh_0","useState","hovered","sethovered","starter","setsstarter","colorfrom","setcolorfrom","counter","setcounter","zep_col_dark","zep_col_light","colorto","setto","useEffect","intervalId","perc","setInterval","lerp","rgbtohex","console","log","document","body","style","cursor","clearInterval","onPointerOver","e","stopPropagation","onPointerOut","Site","cam","fov","near","far","targ","window","innerWidth","innerHeight","shadowMap","camera","fallback","Sky","turbidity","rayleigh","mieCoefficient","mieDirectionalG","elevation","azimuth","OrbitControls","target","ReactDOM","render","getElementById"],"mappings":"0OAIqBA,E,kDACnB,aAAe,uCACP,CACJC,SAAU,CACRC,MAAO,CAAEC,MAAO,GAChBC,YAAa,CAAED,MAAO,IAAIE,QAAY,YACtCC,UAAW,CAAEH,MAAO,IAAIE,QAAY,WAEtCE,aAAa,8TAUbC,eAAe,swH,sCAoBnB,WACE,OAAOC,KAAKR,SAASC,MAAMC,O,IAG7B,SAASO,GACPD,KAAKR,SAASC,MAAMC,MAAQO,I,sBAG9B,WACE,OAAOD,KAAKR,SAASG,YAAYD,Q,oBAGnC,WACE,OAAOM,KAAKR,SAASK,UAAUH,U,GAnDSE,kBAuD5CM,YAAO,CAAEX,mB,4HCnDM,SAASY,EAAT,GAA4G,IAA5FC,EAA2F,EAA3FA,SAA2F,IAAjFC,cAAiF,MAAxE,SAAwE,MAA9DC,cAA8D,MAArD,SAAqD,MAA3CC,YAA2C,MAApC,IAAoC,EAATC,GAAS,EAA/BC,MAA+B,kBAClHC,EAAOC,YAAUC,IAAY,mCAC7BC,EAASC,mBACb,iBAAO,CAAEJ,OAAMH,KAAM,GAAIQ,OAAQ,GAAIC,cAAe,GAAIC,cAAc,EAAMC,eAAgB,EAAGC,UAAW,IAAKC,YAAa,EAAGC,cAAe,KAC9I,CAACX,IAEGY,EAAOC,mBAQb,OAPAC,2BAAgB,WACd,IAAMjB,EAAO,IAAIX,UACjB0B,EAAKG,QAAQC,SAASC,qBACtBL,EAAKG,QAAQC,SAASE,YAAYC,QAAQtB,GAC1Ce,EAAKG,QAAQK,SAASC,EAAe,WAAXzB,GAAuBC,EAAKwB,EAAI,EAAe,UAAXzB,EAAqB,GAAKC,EAAKwB,EAC7FT,EAAKG,QAAQK,SAASE,EAAe,WAAX3B,GAAuBE,EAAKyB,EAAI,EAAe,QAAX3B,EAAmB,GAAKE,EAAKyB,IAC1F,CAAC5B,IAEF,iDAAWI,GAAX,IAAkByB,MAAO,CAAC,GAAM1B,EAAM,GAAMA,EAAM,KAAlD,SACE,uBAAM2B,IAAKZ,EAAX,UACE,8BAAca,KAAM,CAAC/B,EAAUS,KAC/B,6CCbR,SAASuB,EAASC,GAChB,IAAIC,EAAS,4CAA4CC,KAAKF,GAC9D,OAAOC,EAAS,CACdE,EAAGC,SAASH,EAAO,GAAI,IACvBI,EAAGD,SAASH,EAAO,GAAI,IACvBK,EAAGF,SAASH,EAAO,GAAI,KACrB,KAEN,SAASM,EAAeC,GACtB,IAAIR,EAAMQ,EAAEC,SAAS,IACrB,OAAqB,GAAdT,EAAIU,OAAc,IAAMV,EAAMA,EAQvC,SAASW,IACP,IAAMd,EAAMX,mBACN0B,EAAKC,aAAS,SAACC,GAAD,OAAWA,EAAMF,MAC/BG,EAAezC,YAAUf,gBAAqB,aACpDwD,EAAaC,MAAQD,EAAaE,MAAQ1D,iBAC1C,IAAM2D,EAAOzC,mBAAQ,kBAAM,IAAIlB,gBAAoB,IAAO,OAAQ,IAC5DiB,EAASC,mBACb,iBAAO,CACL0C,aAAc,IACdC,cAAe,IACfL,eACAM,aAAc,IAAI9D,WAAe,GACjC+D,SAAU,UACVC,WAAY,UACZC,gBAAiB,EAEjBC,SAAgBC,IAAXd,EAAGa,IACRE,OAAQf,EAAGgB,YAEb,CAACb,IAGH,OADAc,aAAS,SAACf,EAAOgB,GAAR,OAAmBjC,EAAIT,QAAQ2C,SAAS5E,SAAS6E,KAAK3E,OAASyE,KACjE,uBAAOjC,IAAKA,EAAKC,KAAM,CAACoB,EAAM1C,GAAS,cAAayD,KAAKC,GAAK,ID/CvErE,YAAO,CAAEsE,mBCKTtE,YAAO,CAAEuE,YA8CT,IAAMC,EAAO,WACX,IAAMC,EAAOhE,YAAUiE,IAAY,qBAG7BC,EAASC,oBAAU,CACvBC,KAAM,CAACC,SAAQ,GACfC,KAAM,CAAEC,SAAU,CAAC,IAAK,EAAG,GAClBpD,SAAU,CAAC,EAAE,EAAE,MAExBqD,GAAI,CACED,SAAU,CAAC,EAAG,EAAG,GACjBpD,SAAU,CAAC,EAAE,GAAG,MAEtBjB,OAAO,CAAEuE,KAAM,EAAGC,QAAS,IAAKC,SAAU,KAK5C,OACE,cAAC,WAAShE,KAAV,2BAAoBuD,GAApB,aACA,2BAAWU,OAAQZ,EAAKa,MAAOvD,MAAO,GAAIH,SAAU,CAAC,EAAE,EAAE,SAKvD2D,EAAW,WACf,IAAMd,EAAOhE,YAAUiE,IAAY,yBAE7BC,EAASC,oBAAU,CACvBC,MAAM,EACNE,KAAM,CAAEC,SAAU,CAAC,EAHR,KAGiB,GACnBpD,SAAU,CAAC,GAAG,GAAG,MAE1BqD,GAAI,CAAED,SAAU,CAAC,EAAG,EAAG,GACjBpD,SAAU,CAAC,GAAG,GAAG,MAEvBjB,OAAO,CAAEuE,KAAM,IAAKC,QAAS,IAAKC,SAAU,KAI9C,OACE,cAAC,WAAShE,KAAV,2BAAoBuD,GAApB,aAEI,2BAAWU,OAAQZ,EAAKa,MACvBvD,MAAO,SAOVyD,EAAS,WACb,IAAIf,EAAOhE,YAAUiE,IAAY,kCAE3BR,EAAW,IAAIxE,oBAAwB,CAC3Ca,MAAO,UACPkF,aAAa,IAGf,OACE,sBACAjE,SAAUiD,EAAKiB,MAAMC,aAAanE,SAClCO,MAAO,IACPmC,SAAUA,EACVc,SAAU,CAAC,EAAE,KAAK,MAOhBY,EAAO,WACX,IAAInB,EAAOhE,YAAUiE,IAAY,qBAEhB,IAAIhF,oBAAwB,CAC3Ca,MAAO,UACPkF,aAAa,IAGf,OACE,2BAAWJ,OAAQZ,EAAKa,MACvBvD,MAAO,GACPH,SAAU,EAAE,KAAK,GAAG,SAKnBiE,EAAc,WAClB,IAAIpB,EAAOhE,YAAUiE,IAAY,4BAEhB,IAAIhF,oBAAwB,CAC3Ca,MAAO,UACPkF,aAAa,IAGf,OACE,qCACE,2BAAWJ,OAAQZ,EAAKa,MACvBvD,MAAO,GACPH,SAAU,EAAE,MAAM,IAAI,MACtBoD,SAAU,CAAC,EAAE,KAAO,KAEpB,gCACC,cAAC/E,EAAD,CAAMG,OAAO,QAAQ4E,SAAU,CAAC,EAAE,KAAQ,GAAIpD,SAAU,EAAE,IAAK,KAAK,MAAO1B,SAAS,sBAErF,+BACG4F,MAAO,IACPjF,OAAQ,IACRkF,UAAW,GACXxF,MAAO,SACPqB,SAAU,EAAE,MAAM,IAAI,MACtBoE,YAAU,QAWdC,EAAW,WACf,IAAIxB,EAAOhE,YAAUiE,IAAY,yBAI3BC,GAHOlE,YAAUiE,IAAY,iCACvBD,EAAKiB,MAAMQ,OAAO1E,SAEfoD,oBAAU,CACvBC,MAAM,EACNE,KAAM,CAAEC,SAAU,CAAC,EAAG,EAAG,GAChBpD,SAAU,CAAC,EAAE,GAAG,MAEzBqD,GAAI,CAAED,SAAU,CAAC,EAAG,EAAG,GACjBpD,SAAU,CAAC,EAAE,GAAG,MAEtBjB,OAAO,CAAEuE,KAAM,IAAKC,QAAS,IAAKC,SAAU,MAK9C,EAA8Be,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA+BF,oBAAS,GAAxC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,mBAAS,WAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,qBAA9B,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,EAAe,UACfC,EAAgB,UACtB,EAAyBV,mBAAS,WAAlC,mBAAOW,EAAP,KAAgBC,EAAhB,KAGAC,qBAAU,WAER,IAAIC,EACAC,EAAO,IAqBX,GAnBId,GAAWE,IACbK,EAAWO,GACXH,EAAMH,GACNH,EAAaI,IAEXT,GAAqB,GAATE,IACdC,GAAY,GACZI,EAAW,GACXI,EAAMH,GACNH,EAAaI,IAEZP,IACDW,EAAaE,aAAY,WACvBR,EAAWD,EAAU,KACpB,IAKDA,EAAUQ,EAAK,CACjB,IAAI5E,EAAI5C,YAAgB0H,KAAK7E,SAASL,EAASsE,GAAWlE,GAAGC,SAASL,EAAS4E,GAASxE,GAAGoE,EAAQQ,GAC/F1E,EAAI9C,YAAgB0H,KAAK7E,SAASL,EAASsE,GAAWhE,GAAGD,SAASL,EAAS4E,GAAStE,GAAGkE,EAAQQ,GAC/FzE,EAAI/C,YAAgB0H,KAAK7E,SAASL,EAASsE,GAAW/D,GAAGF,SAASL,EAAS4E,GAASrE,GAAGiE,EAAQQ,GAC/FvE,EAjNV,SAAkBL,EAAGE,EAAGC,GACtB,MAAO,IAAMC,EAAeJ,GAAKI,EAAeF,GAAKE,EAAeD,GAgNxD4E,CAAS9E,SAASD,GAAGC,SAASC,GAAGD,SAASE,IAClD6E,QAAQC,IAAI5E,GACZ8D,EAAa9D,QAEb4D,GAAY,GAIf,OADAiB,SAASC,KAAKC,MAAMC,OAASvB,EAAU,UAAY,OAC5C,kBAAMwB,cAAcX,MAC1B,CAACb,EAAQM,IAKb,IAAMxC,EAAW,IAAIxE,oBAAwB,CAC3Ca,MAAOiG,EACPf,aAAa,IAGb,OAEE,mCACA,cAAC,WAASrE,KAAV,2BAAoBuD,GAApB,aACM,sBAAMnD,SAAUiD,EAAKiB,MAAMQ,OAAO1E,SACjCO,MAAO,GACP8F,cAAe,SAACC,GAAD,OAAQA,EAAEC,kBAAmB1B,GAAW,IAExD2B,aAAc,SAACF,GAAD,OAAQA,EAAEC,kBAAmB1B,GAAW,IACtDnC,SAAUA,UAYL,SAAS+D,IAGxB,IAAMC,EAAM,CACVtG,SAAU,EAAE,IAAI,IAAI,MACpBuG,IAAK,GACLC,KAAM,EACNC,IAAK,KAGDC,EAAO,CAACJ,EAAItG,SAAS,GAAG,GAAGsG,EAAItG,SAAS,GAAG,EAAEsG,EAAItG,SAAS,IACjD,IAAIlC,oBAAyB,GAAI6I,OAAOC,WAAaD,OAAOE,YAAa,EAAG,KAE3F,OACE,eAAC,IAAD,CAAQC,WAAS,EAACC,OAAQT,EAA1B,UAKI,eAAC,WAAD,CAAUU,SAAU,KAApB,UAEE,kCAAkBrI,MAAO,SAAUwF,UAAW,GAAInE,SAAU,CAAC,EAAE,IAAI,OACnE,4BAAYA,SAAU,CAAC,EAAE,IAAI,KAAMrB,MAAM,MAAMwF,UAAW,KAC1D,4BAAYnE,SAAU,CAAC,EAAE,IAAI,KAAMrB,MAAM,OAAOwF,UAAW,KAC3D,cAACjD,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC+F,EAAA,EAAD,CACA9C,UAAW,GACXhE,MAAO,IACP+G,UAAW,GACXC,SAAU,EACVC,eAAgB,KAChBC,gBAAiB,GACjBC,UAAW,EACXC,QAAS,SAIX,cAACC,EAAA,EAAD,CAAeC,OAAQf,OCrT7BgB,IAASC,OACP,cAACtB,EAAD,IACAT,SAASgC,eAAe,W","file":"static/js/main.b1148fa5.chunk.js","sourcesContent":["import * as THREE from 'three'\r\nimport { extend } from '@react-three/fiber'\r\nimport glsl from 'babel-plugin-glsl/macro'\r\n\r\nexport default class PortalMaterial extends THREE.ShaderMaterial {\r\n  constructor() {\r\n    super({\r\n      uniforms: {\r\n        uTime: { value: 0 },\r\n        uColorStart: { value: new THREE.Color('#2B60DE') },\r\n        uColorEnd: { value: new THREE.Color('white') },\r\n      },\r\n      vertexShader: `\r\n      varying vec2 vUv;\r\n      void main() {\r\n        vec4 modelPosition = modelMatrix * vec4(position, 1.0);\r\n        vec4 viewPosition = viewMatrix * modelPosition;\r\n        vec4 projectionPosition = projectionMatrix * viewPosition;\r\n        gl_Position = projectionPosition;\r\n        vUv = uv;\r\n      }\r\n      `,\r\n      fragmentShader: glsl`\r\n      #pragma glslify: cnoise3 = require(glsl-noise/simplex/3d.glsl)\r\n      uniform float uTime;\r\n      uniform vec3 uColorStart;\r\n      uniform vec3 uColorEnd;\r\n      varying vec2 vUv;\r\n      void main() {\r\n        vec2 displacedUv = vUv + cnoise3(vec3(vUv * 1.0, uTime * 0.1));\r\n        float strength = cnoise3(vec3(displacedUv * 1.0, uTime *0.1));\r\n        float outerGlow = distance(vUv, vec2(0.5)) * 3.0 - 1.4;\r\n        strength += outerGlow;\r\n        strength += step(-0.2, strength) * 0.5;\r\n        strength = clamp(strength, 0.0, 0.9);\r\n        vec3 color = mix(uColorStart, uColorEnd, strength);\r\n        gl_FragColor = vec4(color, 1.0);\r\n      }\r\n      `,\r\n    })\r\n  }\r\n\r\n  get time() {\r\n    return this.uniforms.uTime.value\r\n  }\r\n\r\n  set time(v) {\r\n    this.uniforms.uTime.value = v\r\n  }\r\n\r\n  get colorStart() {\r\n    return this.uniforms.uColorStart.value\r\n  }\r\n\r\n  get colorEnd() {\r\n    return this.uniforms.uColorEnd.value\r\n  }\r\n}\r\n\r\nextend({ PortalMaterial })\r\n","import * as THREE from 'three'\r\nimport React, { useMemo, useRef, useLayoutEffect } from 'react'\r\nimport { extend, useLoader } from '@react-three/fiber'\r\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader'\r\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry'\r\n\r\nextend({ TextGeometry })\r\n\r\nexport default function Text({ children, vAlign = 'center', hAlign = 'center', size = 1.5, color = '#000000', ...props }) {\r\n  const font = useLoader(FontLoader, '/gentilis_regular.typeface.json')\r\n  const config = useMemo(\r\n    () => ({ font, size: 40, height: 30, curveSegments: 32, bevelEnabled: true, bevelThickness: 6, bevelSize: 2.5, bevelOffset: 0, bevelSegments: 8 }),\r\n    [font]\r\n  )\r\n  const mesh = useRef()\r\n  useLayoutEffect(() => {\r\n    const size = new THREE.Vector3()\r\n    mesh.current.geometry.computeBoundingBox()\r\n    mesh.current.geometry.boundingBox.getSize(size)\r\n    mesh.current.position.x = hAlign === 'center' ? -size.x / 2 : hAlign === 'right' ? 0 : -size.x\r\n    mesh.current.position.y = vAlign === 'center' ? -size.y / 2 : vAlign === 'top' ? 0 : -size.y\r\n  }, [children])\r\n  return (\r\n    <group {...props} scale={[0.1 * size, 0.1 * size, 0.01]}>\r\n      <mesh ref={mesh}>\r\n        <textGeometry args={[children, config]} />\r\n        <meshNormalMaterial />\r\n      </mesh>\r\n    </group>\r\n  )\r\n}\r\n","import React, { Suspense, useEffect, useRef, useState, useMemo } from 'react'\r\nimport './PortalMaterial'\r\nimport * as THREE from 'three'\r\nimport { TextureLoader } from 'three/src/loaders/TextureLoader'\r\nimport { Canvas,extend, useLoader, useFrame, useThree,} from '@react-three/fiber'\r\nimport { Physics, Debug, usePlane, useCompoundBody } from '@react-three/cannon'\r\nimport { Geometry,Water } from \"three-stdlib\";\r\nimport { OrbitControls, Sky } from '@react-three/drei'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport { useSpring, animated,config } from '@react-spring/three'\r\nimport Text from './text'\r\nextend({ Water })\r\n\r\nfunction hextorgb(hex) {\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n  } : null;\r\n}\r\nfunction componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\nfunction rgbtohex(r, g, b) {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\n\r\n\r\nfunction Ocean() {\r\n  const ref = useRef()\r\n  const gl = useThree((state) => state.gl)\r\n  const waterNormals = useLoader(THREE.TextureLoader, '/0110.png')\r\n  waterNormals.wrapS = waterNormals.wrapT = THREE.RepeatWrapping\r\n  const geom = useMemo(() => new THREE.PlaneGeometry(20000, 20000), [])\r\n  const config = useMemo(\r\n    () => ({\r\n      textureWidth: 512,\r\n      textureHeight: 512,\r\n      waterNormals,\r\n      sunDirection: new THREE.Vector3(-1),\r\n      sunColor: 'hotpink',\r\n      waterColor: '#012a4a',\r\n      distortionScale: 3,\r\n\r\n      fog: gl.fog !== undefined,\r\n      format: gl.encoding\r\n    }),\r\n    [waterNormals]\r\n  )\r\n  useFrame((state, delta) => (ref.current.material.uniforms.time.value += delta))\r\n  return <water ref={ref} args={[geom, config]} rotation-x={-Math.PI / 2} />\r\n}\r\n\r\n\r\nconst Ball = () => {\r\n  const gltf = useLoader(GLTFLoader, './ball/scene.gltf')\r\n\r\n\r\n  const styles = useSpring({\r\n    loop: {reverse:true},\r\n    from: { rotation: [.01, 0, 0],\r\n             position: [0,0,200],\r\n           },\r\n    to: {\r\n          rotation: [0, 0, 0],\r\n          position: [0,.1,200]\r\n          },\r\n    config:{ mass: 2, tension: 120, friction: 0 }\r\n  });\r\n\r\n\r\n\r\n  return(\r\n    <animated.mesh { ...styles}>\r\n    <primitive object={gltf.scene} scale={10} position={[0,5,0]}/>\r\n  </animated.mesh>\r\n  );\r\n}\r\n\r\nconst Umbrella = () => {\r\n  const gltf = useLoader(GLTFLoader, './umbrella/scene.gltf')\r\n  const rota = 3.14*2;\r\n  const styles = useSpring({\r\n    loop: true,\r\n    from: { rotation: [0, rota, 0 ],\r\n             position: [10,28,100],\r\n           },\r\n    to: { rotation: [0, 0, 0],\r\n          position: [10,28,100]\r\n          },\r\n    config:{ mass: 200, tension: 200, friction: 0 }\r\n  });\r\n  // child.material.color.lerp(color.set(hovered === child.name ? \"tomato\" : \"#202020\").convertSRGBToLinear(), hovered ? 0.1 : 0.05)\r\n\r\n  return(\r\n    <animated.mesh { ...styles}>\r\n\r\n        <primitive object={gltf.scene}\r\n         scale={0.1}/>\r\n\r\n    </animated.mesh>\r\n  );\r\n\r\n}\r\n\r\nconst Island = () => {\r\n  var gltf = useLoader(GLTFLoader, './island/island_base1_fin.gltf')\r\n\r\n  const material = new THREE.MeshPhongMaterial({\r\n    color: '#C2B280',    // red (can also use a CSS color string here)\r\n    flatShading: false,\r\n  });\r\n\r\n  return(\r\n    <mesh\r\n    geometry={gltf.nodes.Landscape004.geometry}\r\n    scale={200}\r\n    material={material}\r\n    rotation={[0,3.14,0]}\r\n     >\r\n      </mesh>\r\n  )\r\n}\r\n\r\n\r\nconst Dock = () => {\r\n  var gltf = useLoader(GLTFLoader, './dock/scene.gltf')\r\n  // console.log(gltf)\r\n  const material = new THREE.MeshPhongMaterial({\r\n    color: '#C2B280',    // red (can also use a CSS color string here)\r\n    flatShading: false,\r\n  });\r\n\r\n  return(\r\n    <primitive object={gltf.scene}\r\n     scale={.2}\r\n     position={[-900,-0,-2700]}\r\n     />\r\n  )\r\n}\r\n\r\nconst Noticeboard = () => {\r\n  var gltf = useLoader(GLTFLoader, './noticeboard/scene.gltf')\r\n\r\n  const material = new THREE.MeshPhongMaterial({\r\n    color: '#C2B280',    // red (can also use a CSS color string here)\r\n    flatShading: false,\r\n  });\r\n\r\n  return(\r\n    <>\r\n      <primitive object={gltf.scene}\r\n       scale={50}\r\n       position={[-1010,-30,-2800]}\r\n       rotation={[0,3.14/2,0]}\r\n       />\r\n       <group>\r\n        <Text hAlign=\"right\" rotation={[0,3.14/2 ,0]} position={[-1000,100,-2750]} children=\"Look behind you\" />\r\n       </group>\r\n       <rectAreaLight\r\n          width={300}\r\n          height={100}\r\n          intensity={10}\r\n          color={'orange'}\r\n          position={[-1010,-30,-2700]}\r\n          castShadow\r\n        />\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst Zeppelin = () => {\r\n  var gltf = useLoader(GLTFLoader, './zeppelin/scene.gltf')\r\n  var textur = useLoader(GLTFLoader, './zeppelin/texture/scene.gltf')\r\n  const zep = gltf.nodes.mesh_0.geometry\r\n  const rota = 3.14*2;\r\n  const styles = useSpring({\r\n    loop: true,\r\n    from: { rotation: [0, 0, 0 ],\r\n             position: [0,40,300],\r\n           },\r\n    to: { rotation: [0, 0, 0],\r\n          position: [0,30,300]\r\n          },\r\n    config:{ mass: 200, tension: 100, friction: 0 }\r\n  });\r\n\r\n  // console.log(gltf)\r\n\r\n  const [hovered, sethovered] = useState(false)\r\n  const [starter, setsstarter] = useState(false)\r\n  const [colorfrom, setcolorfrom] = useState('#000000')\r\n  const [counter, setcounter] = useState()\r\n  const zep_col_dark = '#012a4a'\r\n  const zep_col_light = '#014f86'\r\n  const [colorto, setto] = useState('#000000')\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    let intervalId;\r\n    let perc = 100;\r\n\r\n    if((hovered)&&(starter)){\r\n      setcounter(perc)\r\n      setto(zep_col_dark)\r\n      setcolorfrom(zep_col_light)\r\n    }\r\n    if (hovered && (starter==false)){\r\n      setsstarter(true)\r\n      setcounter(0)\r\n      setto(zep_col_dark)\r\n      setcolorfrom(zep_col_light)\r\n    }\r\n    if(starter){\r\n      intervalId = setInterval(() => {\r\n        setcounter(counter + 1);\r\n      }, 1)\r\n    }\r\n\r\n\r\n\r\n    if (counter < perc){\r\n      var r = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).r),parseInt(hextorgb(colorto).r),counter/perc)\r\n      var g = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).g),parseInt(hextorgb(colorto).g),counter/perc)\r\n      var b = THREE.MathUtils.lerp(parseInt(hextorgb(colorfrom).b),parseInt(hextorgb(colorto).b),counter/perc)\r\n      var c = rgbtohex(parseInt(r),parseInt(g),parseInt(b))\r\n      console.log(c)\r\n      setcolorfrom(c)\r\n    }else{\r\n      setsstarter(false)\r\n    }\r\n\r\n   document.body.style.cursor = hovered ? \"pointer\" : \"auto\"\r\n   return () => clearInterval(intervalId);\r\n }, [hovered,counter])\r\n\r\n\r\n\r\n\r\nconst material = new THREE.MeshPhongMaterial({\r\n  color: colorfrom,    // red (can also use a CSS color string here)\r\n  flatShading: true,\r\n\r\n});\r\n  return(\r\n\r\n    <>\r\n    <animated.mesh { ...styles}>\r\n          <mesh geometry={gltf.nodes.mesh_0.geometry}\r\n           scale={10}\r\n           onPointerOver={(e) => (e.stopPropagation(), sethovered(true))\r\n         }\r\n          onPointerOut={(e) => (e.stopPropagation(), sethovered(false))}\r\n          material={material}\r\n           >\r\n\r\n            </mesh>\r\n      </animated.mesh>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\nexport default function Site() {\r\n\r\n\r\nconst cam = {\r\n  position: [-900,70,-2800],\r\n  fov: 90,\r\n  near: 1,\r\n  far: 10000,\r\n\r\n}\r\nconst targ = [cam.position[0]-10,cam.position[1]-1,cam.position[2]]\r\nconst camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 10000 );\r\n\r\nreturn(\r\n  <Canvas shadowMap camera={cam}>\r\n\r\n\r\n\r\n\r\n      <Suspense fallback={null}>\r\n\r\n        <directionalLight color={\"orange\"} intensity={.1} position={[0,60,-200]} />\r\n        <pointLight position={[0,60,-200]} color=\"red\" intensity={.5} />\r\n        <pointLight position={[0,60,-200]} color=\"blue\" intensity={.1} />\r\n        <Ocean />\r\n        <Ball/>\r\n        <Umbrella/>\r\n        <Zeppelin/>\r\n        <Island/>\r\n        <Dock/>\r\n        <Noticeboard/>\r\n        <Sky\r\n        intensity={10}\r\n        scale={10000}\r\n        turbidity={10}\r\n        rayleigh={2}\r\n        mieCoefficient={0.005}\r\n        mieDirectionalG={0.8}\r\n        elevation={0}\r\n        azimuth={180}\r\n         ></Sky>\r\n      </Suspense>\r\n\r\n      <OrbitControls target={targ}/>\r\n\r\n  </Canvas>\r\n);\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Site from './main.js';\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Site />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}